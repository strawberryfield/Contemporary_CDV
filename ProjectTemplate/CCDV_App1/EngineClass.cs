// This file is generated by Casasoft Contemporary Carte de Visite Tools
// https://github.com/strawberryfield/Contemporary_CDV

using Casasoft.CCDV;
using Casasoft.CCDV.Engines;
using Casasoft.CCDV.JSON;
using ImageMagick;
using System.Drawing;
using System.Text.Json;

namespace CCDV_App1;

internal class EngineClass : BaseEngine
{
    /// <summary>
    /// Constructor
    /// </summary>
    public EngineClass()
    {
        parameters = new ParametersClass();
        ScriptingClass = new ScriptingClass();
    }

    /// <summary>
    /// Constructor
    /// </summary>
    /// <param name="par">Command line options</param>
    public EngineClass(ICommandLine par) : base(par)
    {
        CommandLineClass p = (CommandLineClass)par;
        // Add here custom parameters initialization

        ScriptingClass = new ScriptingClass();
        Script = p.Script;

        parameters = new ParametersClass();
    }

    #region json
    /// <summary>
    /// Returns the parameters in json format
    /// </summary>
    /// <returns></returns>
    public override string GetJsonParams()
    {
        GetBaseJsonParams();
        ParametersClass p = (ParametersClass)parameters;
        // Add here custom parameters initialization

        return JsonSerializer.Serialize(p);
    }

    /// <summary>
    /// Sets the parameters from json formatted string
    /// </summary>
    /// <param name="json"></param>
    public override void SetJsonParams(string json)
    {
        ParametersClass? p = JsonSerializer.Deserialize<ParametersClass>(json);
        parameters = p;
        SetBaseJsonParams();
        // Add here custom parameters initialization
    }
    #endregion

    /// <summary>
    /// Does the dirty work
    /// </summary>
    /// <param name="quiet"></param>
    /// <returns></returns>
    public override MagickImage GetResult(bool quiet)
    {
        _ = base.GetResult(quiet);

        MagickImage final = GetOutputPaper(PaperFormats.Small);

        // Add your code here

        return final;
    }
}
