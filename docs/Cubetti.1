.\" Automatically generated by Pandoc 2.13
.\"
.TH "CUBETTI" "1" "March 2022" "" ""
.hy
.SH NAME
.PP
Cubetti - Creates a cube matrix with 6 photos.
.SH SYNOPSIS
.PP
\f[B]Cubetti\f[R] [options]* inputfiles
.SH DESCRIPTION
.PP
This program allows you to create a cube matrix with 6 photos.
.PD 0
.P
.PD
Each face of the cube has a portion of one of the six images.
.SH OPTIONS
.PP
\f[B]-r, \[en]rows=VALUE\f[R] :
.PD 0
.P
.PD
set the number of rows of the output matrix (
.PD 0
.P
.PD
default 2)
.PP
\f[B]-c, \[en]columns=VALUE\f[R] :
.PD 0
.P
.PD
set the number of columns of the output matrix (
.PD 0
.P
.PD
default 2)
.PP
\f[B]-s, \[en]size=VALUE\f[R] :
.PD 0
.P
.PD
set the size of each cube (default 50mm)
.PP
\f[B]\[en]paper=VALUE\f[R] :
.PD 0
.P
.PD
Output paper size:
.PD 0
.P
.PD
Large 20x27cm
.PD 0
.P
.PD
Medium (default) 15x20cm
.PD 0
.P
.PD
A4 210x297mm
.PP
\f[B]\[en]sample\f[R] :
.PD 0
.P
.PD
generate sample images
.PP
\f[B]\[en]fillcolor=VALUE\f[R] :
.PD 0
.P
.PD
set the color used to fill the images
.PD 0
.P
.PD
(default #FFFFFF)
.PP
\f[B]\[en]bordercolor=VALUE\f[R] :
.PD 0
.P
.PD
set the color used to border the images
.PD 0
.P
.PD
(default #000000)
.PP
\f[B]\[en]dpi=VALUE\f[R] :
.PD 0
.P
.PD
set output resolution (default 300)
.PP
\f[B]\[en]json=VALUE\f[R] :
.PD 0
.P
.PD
parameters in json format,
.PD 0
.P
.PD
use \[en]helpjson for sample template
.PD 0
.P
.PD
Text can be stored in a file instead of a string
.PD 0
.P
.PD
The file must be referenced as `\[at]filename'
.PP
\f[B]\[en]script=VALUE\f[R] :
.PD 0
.P
.PD
c# script for custom processing,
.PD 0
.P
.PD
use \[en]helpscript for sample template
.PD 0
.P
.PD
Text can be stored in a file instead of a string
.PD 0
.P
.PD
The file must be referenced as `\[at]filename'
.PP
\f[B]-o, \[en]output=VALUE\f[R] :
.PD 0
.P
.PD
set output dir/filename
.PP
\f[B]\[en]extension=VALUE\f[R] :
.PD 0
.P
.PD
file extension for output file (default `jpg')
.PP
\f[B]\[en]tag=VALUE\f[R] :
.PD 0
.P
.PD
extra info for user scripts
.PD 0
.P
.PD
Text can be stored in a file instead of a string
.PD 0
.P
.PD
The file must be referenced as `\[at]filename'
.PP
\f[B]\[en]nobanner\f[R] :
.PD 0
.P
.PD
suppress the banner
.PP
\f[B]-h, \[en]help\f[R] :
.PD 0
.P
.PD
show this message and exit
.PP
\f[B]\[en]helpjson\f[R] :
.PD 0
.P
.PD
show json parameters template
.PP
\f[B]\[en]helpscript\f[R] :
.PD 0
.P
.PD
show script template
.PP
\f[B]\[en]man\f[R] :
.PD 0
.P
.PD
show the man page source and exit
.PP
\f[B]\[en]colors\f[R] :
.PD 0
.P
.PD
list available colors by name
.PP
\f[B]\[en]license\f[R] :
.PD 0
.P
.PD
show program license (AGPL 3.0)
.SS COLORS
.PP
Colors can be written in any of these formats:
.PD 0
.P
.PD
#rgb
.PD 0
.P
.PD
#rrggbb
.PD 0
.P
.PD
#rrggbbaa
.PD 0
.P
.PD
#rrrrggggbbbb
.PD 0
.P
.PD
#rrrrggggbbbbaaaa
.PD 0
.P
.PD
colorname (use Cubetti \[en]colors to see all available colors)
.SS JSON
.PP
Parameters can also be passed with a json formatted string
.PD 0
.P
.PD
using the following template:
.IP
.nf
\f[C]
{
  \[dq]Rows\[dq]: 2,
  \[dq]Columns\[dq]: 3,
  \[dq]Size\[dq]: 50,
  \[dq]Paper\[dq]: null,
  \[dq]FillColor\[dq]: \[dq]#FFFFFF\[dq],
  \[dq]BorderColor\[dq]: \[dq]#000000\[dq],
  \[dq]Dpi\[dq]: 300,
  \[dq]OutputName\[dq]: \[dq]\[dq],
  \[dq]Extension\[dq]: \[dq]jpg\[dq],
  \[dq]Script\[dq]: null,
  \[dq]Tag\[dq]: null,
  \[dq]FilesList\[dq]: []
}
\f[R]
.fi
.SS ENVIRONMENT VARIABLES
.PP
The program can read values from these variables:
.PD 0
.P
.PD
CDV_OUTPATH Base path for output files
.PD 0
.P
.PD
CDV_DPI Resolution for output files
.PD 0
.P
.PD
CDV_FILL Color used to fill images
.PD 0
.P
.PD
CDV_BORDER Border color
.SH SCRIPTING
.PP
You can add custom c# code, compiled at runtime, with the \[en]script
parameter.
You can call a property \f[I]engine\f[R] that exposes all the parameters
passed to the main program.
.PP
The following using are declared:
.PD 0
.P
.PD
\[ti]\[ti]\[ti]
.PP
using Casasoft.CCDV; using Casasoft.CCDV.Engines; using
Casasoft.CCDV.JSON; using ImageMagick; using System; using
System.Collections.Generic; using System.IO; using System.Linq;
.IP
.nf
\f[C]
These are the signatures of the scriptable methods:
\f[R]
.fi
.PP
// Script template for Cubetti
///
/// Custom class initialization ///
.PP
public void Init() { }
///
/// Image for final output ///
.PP
/// public MagickImage OutputImage() => null;
.PP
\[ti]\[ti]\[ti]
.SH COPYRIGHT
.PP
Casasoft Cubetti is free software:
.PD 0
.P
.PD
you can redistribute it and/or modify it
.PD 0
.P
.PD
under the terms of the GNU Affero General Public License as published by
.PD 0
.P
.PD
the Free Software Foundation, either version 3 of the License, or
.PD 0
.P
.PD
(at your option) any later version.
.PP
You should have received a copy of the GNU AGPL v.3
.PD 0
.P
.PD
along with Casasoft Cubetti.
.PD 0
.P
.PD
If not, see <http://www.gnu.org/licenses/>.
.SH DISCLAIMER
.PP
Casasoft Cubetti is distributed in the hope that it will be useful,
.PD 0
.P
.PD
but WITHOUT ANY WARRANTY; without even the implied warranty of
.PD 0
.P
.PD
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
.PD 0
.P
.PD
See the GNU General Public License for more details.
.SH AUTHORS
Roberto Ceccarelli - Casasoft.
